/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utility;

import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 *
 * @author Strat
 */
public class LevelSelect extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
    static String[] labels = {"","","","","","","","","","",""};
    static Boolean[] states = {false, false, false, false, false, false, false, false, false, false, false}; 
    static Boolean[] visibility= {false, false, false, false, false, false, false, false, false, false, false};
    @Override
    public Dimension getPreferredSize() {
        return new Dimension(380, 500);
    }
	/**
     * Creates new form LevelSelect
     */
    public LevelSelect(String[] labels, Boolean[] states, Boolean[] visibility) {
    	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
  //  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	heading = new java.awt.Label();
        buttonCancel = new java.awt.Button();
        buttonOkay = new java.awt.Button();
        scrollPane1 = new java.awt.ScrollPane();
        panel1 = new java.awt.Panel();
        checkbox00 = new java.awt.Checkbox();
        checkbox01 = new java.awt.Checkbox();
        checkbox02 = new java.awt.Checkbox();
        checkbox03 = new java.awt.Checkbox();
        checkbox04 = new java.awt.Checkbox();
        checkbox05 = new java.awt.Checkbox();
        checkbox06 = new java.awt.Checkbox();
        checkbox07 = new java.awt.Checkbox();
        checkbox08 = new java.awt.Checkbox();
        checkbox09 = new java.awt.Checkbox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Level Select");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setFont(new java.awt.Font("Dialog", 0, 16)); 
        setLocation(new java.awt.Point(200, 50));
        setMaximumSize(new java.awt.Dimension(500, 800));
        setName("frameLevelSelect"); 
        setPreferredSize(new java.awt.Dimension(360, 420));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        heading.setAlignment(java.awt.Label.CENTER);
        heading.setFont(new java.awt.Font("Dialog", 0, 18)); 
        heading.setMinimumSize(new java.awt.Dimension(200, 22));
        heading.setName("heading"); 
        heading.setPreferredSize(new java.awt.Dimension(200, 22));
        heading.setText("Select Levels Containing Staircase");

        buttonCancel.setFont(new java.awt.Font("Dialog", 0, 16)); 
        buttonCancel.setLabel("Cancel");
        buttonCancel.setMaximumSize(new java.awt.Dimension(75, 26));
        buttonCancel.setName("cancel"); 
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonOkay.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        buttonOkay.setFont(new java.awt.Font("Dialog", 0, 16)); 
        buttonOkay.setLabel("Okay");
        buttonOkay.setMaximumSize(new java.awt.Dimension(75, 26));
        buttonOkay.setName("okay"); 
        buttonOkay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkayActionPerformed(evt);
            }
        });

        scrollPane1.setFont(new java.awt.Font("Dialog", 0, 16)); 
        scrollPane1.setMaximumSize(new java.awt.Dimension(220, 500));
        scrollPane1.setMinimumSize(new java.awt.Dimension(200, 240));
        scrollPane1.setPreferredSize(new java.awt.Dimension(200, 240));
        scrollPane1.setName("scrollPane"); 

        panel1.setName("cbContainer");  
        
        checkbox00.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox00.setLabel(labels[0]);
        checkbox00.setState(states[0]);
        checkbox00.setVisible(visibility[0]);
        checkbox00.addItemListener(new ItemListen());
        
        checkbox01.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox01.setLabel(labels[1]);
        checkbox01.setState(states[1]);
        checkbox01.setVisible(visibility[1]);
        checkbox01.addItemListener(new ItemListen());

        checkbox02.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox02.setLabel(labels[2]);
        checkbox02.setState(states[2]);
        checkbox02.setVisible(visibility[2]);
        checkbox02.addItemListener(new ItemListen());

        checkbox03.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox03.setLabel(labels[3]);
        checkbox03.setState(states[3]);
        checkbox03.setVisible(visibility[3]);
        checkbox03.addItemListener(new ItemListen());

        checkbox04.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox04.setLabel(labels[4]);
        checkbox04.setState(states[4]);
        checkbox04.setVisible(visibility[4]);
        checkbox04.addItemListener(new ItemListen());

        checkbox05.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox05.setLabel(labels[5]);
        checkbox05.setState(states[5]);
        checkbox05.setVisible(visibility[5]);
        checkbox05.addItemListener(new ItemListen());

        checkbox06.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox06.setLabel(labels[6]);
        checkbox06.setState(states[6]);
        checkbox06.setVisible(visibility[6]);
        checkbox06.addItemListener(new ItemListen());

        checkbox07.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox07.setLabel(labels[7]);
        checkbox07.setState(states[7]);
        checkbox07.setVisible(visibility[7]);
        checkbox07.addItemListener(new ItemListen());

        checkbox08.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox08.setLabel(labels[8]);
        checkbox08.setState(states[8]);
        checkbox08.setVisible(visibility[8]);
        checkbox08.addItemListener(new ItemListen());

        checkbox09.setFont(new java.awt.Font("Dialog", 0, 16)); 
        checkbox09.setLabel(labels[9]);
        checkbox09.setState(states[9]);
        checkbox09.setVisible(visibility[9]);
        checkbox09.addItemListener(new ItemListen());
        

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            		.addComponent(checkbox00, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            		.addComponent(checkbox01, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            		.addComponent(checkbox02, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            		.addComponent(checkbox03, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            		.addComponent(checkbox04, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            		.addComponent(checkbox05, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(checkbox06, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(checkbox07, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(checkbox08, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(checkbox09, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    )
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkbox00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox09, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                )
        );

        scrollPane1.add(panel1);
        panel1.getAccessibleContext().setAccessibleName("");
        panel1.setPreferredSize(new Dimension(400, 650));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(heading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonOkay, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonOkay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        heading.getAccessibleContext().setAccessibleName("heading");

        pack();
        setLocationRelativeTo(null);
    }
    
    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        // TODO add your handling code here:
    	this.dispose();
    }

    private void buttonOkayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkayActionPerformed
        // TODO add your handling code here:
    	this.dispose();
    }

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    	evt.getWindow().dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LevelSelect(labels, states, visibility).setVisible(true);
            }
        });
    }
    
    public static void levelSelectUI(String[]labelStrings, Boolean[]setStates, Boolean[]setVisibility) {
		labels=labelStrings;
    	states= setStates;
    	visibility = setVisibility;
    	
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LevelSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	new LevelSelect(labels, states, visibility).setVisible(true);
            }
        });
    }
    private class ItemListen implements ItemListener{
        public void itemStateChanged(ItemEvent e) {
        	java.awt.Checkbox cbItem = (java.awt.Checkbox) e.getSource();
        	java.awt.Checkbox[] checkboxArray= {checkbox09, checkbox08, checkbox07, checkbox06, checkbox05, checkbox04, checkbox03, checkbox02, checkbox01, checkbox00};
        	int index=0;
        	int state = e.getStateChange();
        	for(int i=0; i<checkboxArray.length; i++) {
        		if(cbItem==checkboxArray[i]) {index=i; break;}
        	}
        	if(state==2) {
        		for(int i=0; i<index; i++) {
        			checkboxArray[i].setState(false);
        		}
        	} else {
        		for(int i=index; i<checkboxArray.length; i++) {
        			checkboxArray[i].setState(true);
        		}
        	}
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonCancel;
    private java.awt.Button buttonOkay;
    private java.awt.Checkbox checkbox00;
    private java.awt.Checkbox checkbox01;
    private java.awt.Checkbox checkbox02;
    private java.awt.Checkbox checkbox03;
    private java.awt.Checkbox checkbox04;
    private java.awt.Checkbox checkbox05;
    private java.awt.Checkbox checkbox06;
    private java.awt.Checkbox checkbox07;
    private java.awt.Checkbox checkbox08;
    private java.awt.Checkbox checkbox09;
    private java.awt.Label heading;
    private java.awt.Panel panel1;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration//GEN-END:variables
}
